#!/usr/bin/perl

# Copyright (c) 2016 James Hunt.  All Rights Reserved.

# This file is part of jmxcli.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software..
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.

use strict;
use warnings;
use Getopt::Long qw/:config bundling/;

our $VERSION = "1.0.0";
my %OPTIONS = (
	host                 => 'localhost',
	port                 => '9999',
	dotify               => 1,
	type                 => 'SAMPLE',
	'include-beans'      => '.',
	'exclude-beans'      => '^$',
	'include-attributes' => '.',
	'exclude-attributes' => '^$',
	jar                  => 'jmxcli.jar', # FIXME: FindBin!
);
GetOptions(\%OPTIONS, qw/
	help|h|?
	version|V
	debug|D

	host|H=s
	port|P=s

	prefix|n=s
	bean|N=s
	dotify!
	type|t=s

	username|u=s
	password|p=s

	exclude-beans|x=s
	include-beans|i=s

	exclude-attributes|X=s
	include-attributes|I=s

	jar=s
/) or die "USAGE: ...\n";
if ($OPTIONS{version}) {
	print "jmxcli v${VERSION}\n";
	exit 0;
}

sub dotify
{
	my ($name) = @_;
	$name =~ s/\s+//;
	$name =~ s/^([A-Z])/lc($1)/e;
	$name =~ s/([A-Z]+)/'.'.lc($1)/eg;
	return $name;
}

chomp($OPTIONS{prefix} = qx(hostname -f)) unless $OPTIONS{prefix};

my %exclude = (
	bean => $OPTIONS{'exclude-beans'} ? qr/$OPTIONS{'exclude-beans'}/i : undef,
	attr => $OPTIONS{'exclude-attributes'} ? qr/$OPTIONS{'exclude-attributes'}/i : undef,
);
my %include = (
	bean => qr/$OPTIONS{'include-beans'}/i,
	attr => qr/$OPTIONS{'include-attributes'}/i,
);

my @args = (
	(map { "-Dcom.sun.management.jmxremote.$_" } (qw/port=12345 ssl=false authenticate=false/)),
	'-jar', $OPTIONS{jar},
	'--host', $OPTIONS{host},
	'--port', $OPTIONS{port},
);
@args = (@args, '--user', $OPTIONS{username}) if $OPTIONS{username};
@args = (@args, '--pass', $OPTIONS{password}) if $OPTIONS{password};
@args = (@args, @ARGV);

open my $cli, "-|", "java", @args
	or die "Failed to run jmxcli.jar: $!\n";
my $ts = time;
while (<$cli>) {
	chomp;
	my ($bean, $attr, $value) = split /\t/;
	$attr = dotify($attr) if $OPTIONS{dotify};

	next unless $bean =~ $include{bean};
	next if     $bean =~ $exclude{bean};

	next unless $attr =~ $include{attr};
	next if     $attr =~ $exclude{attr};

	printf "%s %i %s:%s:%s %s\n",
		$OPTIONS{type}, $ts, $OPTIONS{prefix},
		$OPTIONS{bean} || $bean, $attr, $value;
}
